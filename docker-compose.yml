version: "2"
services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: amcom_user
      POSTGRES_PASSWORD: amcom_password
      POSTGRES_DB: amcomdb
    ports:
      - "5432:5432"
    networks:
      - network-kafka

  kafka:
    container_name: kafka
    image: quay.io/strimzi/kafka:latest-kafka-3.1.0-amd64
    command:
      [
        "sh",
        "-c",
        "export CLUSTER_ID=$$(bin/kafka-storage.sh random-uuid) && bin/kafka-storage.sh format -t $$CLUSTER_ID -c config/kraft/server.properties && bin/kafka-server-start.sh config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}",
      ]
    ports:
      - "19092:19092"
      - "39092:39092"
    networks:
      - network-kafka
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:39092,PLAINTEXT_HOST://:19092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:39092,PLAINTEXT_HOST://localhost:19092

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    networks:
      - network-kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:39092
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081

  app:
    build: .
    container_name: springboot_app
    depends_on:
      - postgres
      - kafka
    networks:
      - network-kafka
    environment:
      SPRING_PROFILES_ACTIVE: local
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: amcomdb
      DB_USERNAME: amcom_user
      DB_PASSWORD: amcom_password
      KAFKA_BOOTSTRAP_SERVERS: kafka:39092
    ports:
      - "8080:8080"

networks:
  network-kafka:
